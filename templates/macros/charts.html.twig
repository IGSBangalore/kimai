{#
    --------------------------------- MONTHLY WORKING TIME CHART by YEAR as BAR-CHART ---------------------------------
    @see https://www.chartjs.org/docs/2.9.4/charts/bar.html
#}

{#
    with_billable   = false
    monthRoute      = '/show/by_month/__MONTH__'
    date_format     = '' (only used if monthRoute is not null)
#}
{% macro yearly_javascript(with_billable, monthRoute, date_format) %}
    {% set with_billable = with_billable|default(false) %}
    <script type="text/javascript">
        function yearlyChartOptions() {
            return {
                maintainAspectRatio: true,
                responsive: true,
                legend: false,
                barPercentage: 0.5,
                categoryPercentage: 0.9,
                scales: {
                    xAxes: [{
                        gridLines: {
                            display: false
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: '{{ kimai_context.chart.grid_color }}',
                            lineWidth: 1
                        }
                    }]
                },
                tooltips: {
                    callbacks: {
                        label: function(tooltipItem, data) {
                            var tooltipData = data.datasets[tooltipItem.datasetIndex].realData[tooltipItem.index];
                            return ' ' + tooltipData['duration'];
                        },
                        afterTitle: function(tooltipItems, data) {
                            return ' ';
                        },
                        {% if with_billable %}
                        beforeFooter: function(tooltipItems, data) {
                            return ' ';
                        },
                        footer: function(tooltipItems, data) {
                            var tooltipItem = tooltipItems[0];
                            var tooltipData = data.datasets[tooltipItem.datasetIndex].realData[tooltipItem.index];
                            return '{{ 'label.billable'|trans }}: ' + tooltipData['billable'];
                        },
                        {% endif %}
                    }
                }
                {%- if monthRoute is not null -%}
                ,
                onClick: function(event, elements) {
                    var element = elements[0];
                    var month = this.data.datasets[0].monthData[element._index];
                    var formattedMonth = moment(month).format('{{ date_format }}');
                    document.location = '{{ monthRoute|raw }}'.replace('__MONTH__', formattedMonth);
                }
                {% endif %}
            };
        }
    </script>
{% endmacro %}

{#
    yearStat    = \App\Model\Statistic\Year
    options     = {'height: '100px', 'renderEvent': 'kimai.initialized'}
#}
{% macro yearly_chart(id, yearStat, options) %}
    <div class="chart">
        <canvas id="userProfileChart{{ id }}" style="height: {{ options.height|default(kimai_context.chart.height ~ 'px') }};"></canvas>
    </div>
    <script type="text/javascript">
        document.addEventListener('{{ options.renderEvent|default('kimai.initialized') }}', function() {
            new Chart(
                document.getElementById('userProfileChart{{ id }}').getContext("2d"), {
                    type: 'bar',
                    data: {
                        labels: moment.months(),
                        datasets: [
                            {
                                backgroundColor: '{{ kimai_context.chart.background_color }}',
                                borderColor: '{{ kimai_context.chart.border_color }}',
                                data: [
                                    {% for monthNumber in 1..12 %}
                                    {% set duration = 0 %}
                                    {% set month = yearStat.month(monthNumber) %}
                                    {% if month is not null %}
                                    {% set duration = month.totalDuration %}
                                    {% endif %}
                                    {{ duration|duration_chart }}
                                    {% if not loop.last %},{% endif %}
                                    {% endfor %}
                                ],
                                realData: [
                                    {% for monthNumber in 1..12 %}
                                    {% set duration = 0 %}
                                    {% set billable = 0 %}
                                    {% set month = yearStat.month(monthNumber) %}
                                    {% if month is not null %}
                                    {% set duration = month.totalDuration %}
                                    {% set billable = month.billableDuration %}
                                    {% endif %}
                                    {% set realDayData = {'duration': duration|duration, 'billable': billable|duration} %}
                                    {{ realDayData|json_encode|raw }}
                                    {% if not loop.last %},{% endif %}
                                    {% endfor %}
                                ],
                                monthData: [
                                    {% for monthNumber in 1..12 %}
                                    '{{ yearStat.year }}-{{ monthNumber < 10 ? '0' ~ monthNumber : monthNumber }}-01'
                                    {% if not loop.last %},{% endif %}
                                    {% endfor %}
                                ],
                            }
                        ]
                    },
                    options: Object.assign(yearlyChartOptions(),{{ options|json_encode|raw }})
                }
            );
        });
    </script>
{% endmacro %}

{#
    ------------------------------------------------- DOUNGHNUT CHART -------------------------------------------------
    @see https://www.chartjs.org/docs/2.9.4/charts/doughnut.html
#}

{#
    options = {}
#}
{% macro doughnut_javascript(options) %}
    {% set with_billable = with_billable|default(false) %}
    <script type="text/javascript">
        function doughnutChartOptions() {
            return {
                maintainAspectRatio: true,
                responsive: true,
                cutoutPercentage: 40,
                animation: {
                    animateRotate: true
                },
                tooltips: {
                    callbacks: {
                        label: function(tooltipItem, data) {
                            var tooltipData = data.datasets[tooltipItem.datasetIndex].realData[tooltipItem.index];
                            return ' ' + tooltipData['duration'];
                        },
                        afterTitle: function(tooltipItems, data) {
                            return ' ';
                        },
                        beforeFooter: function(tooltipItems, data) {
                            return ' ';
                        },
                        title: function(tooltipItems, data) {
                            var tooltipItem = tooltipItems[0];
                            var tooltipData = data.datasets[tooltipItem.datasetIndex].realData[tooltipItem.index];
                            return ' ' + tooltipData['name'];
                        },
                        footer: function(tooltipItems, data) {
                            var tooltipItem = tooltipItems[0];
                            var tooltipData = data.datasets[tooltipItem.datasetIndex].realData[tooltipItem.index];
                            return tooltipData['rate'];
                        },
                    }
                }
            };
        }
    </script>
{% endmacro %}

{#
    id          = 'name'
    data        = [{name: '', color: '', duration: 0, rate: 0}]
    options     = {'height: '100px', 'currency': 'EUR', 'renderEvent': 'kimai.initialized'}
#}
{% macro doughnut_chart(id, data, options) %}
    {% set height = options.height|default(kimai_context.chart.height ~ 'px') %}
    <div class="chart" style="position: relative; height: {{ height }};">
        <canvas id="{{ id }}" height="{{ height }}" style="height: {{ height }};"></canvas>
    </div>
    <script type="text/javascript">
        document.addEventListener('{{ options.renderEvent|default('kimai.initialized') }}', function() {
            new Chart(
                $("#{{ id }}").get(0).getContext("2d"), {
                    type: 'doughnut',
                    data: {
                        labels: [
                            {% for entry in data %}
                            '{{ entry.name }}'
                            {% if not loop.last %},{% endif %}
                            {% endfor %}
                        ],
                        datasets: [
                            {
                                backgroundColor: [
                                    {% for entry in data %}
                                    '{{ entry.color|default(kimai_context.chart.background_color) }}',
                                    {% endfor %}
                                ],
                                data: [
                                    {% for entry in data %}
                                    {{ entry.duration }}
                                    {% if not loop.last %},{% endif %}
                                    {% endfor %}
                                ],
                                realData: [
                                    {% for entry in data %}
                                    {{ {'name': entry.name, 'color': entry.color, 'rate': entry.rate|money(options.currency|default(null)), 'duration': entry.duration|duration}|json_encode|raw }}
                                    {% if not loop.last %},{% endif %}
                                    {% endfor %}
                                ],
                            }
                        ]
                    },
                    options: Object.assign(doughnutChartOptions(),{{ options|json_encode|raw }})
                }
            );
        });
    </script>
{% endmacro %}

{#
    --------------------------------- BAR-CHART ---------------------------------
    @see https://www.chartjs.org/docs/2.9.4/charts/bar.html
#}

{% macro bar_javascript() %}
    <script type="text/javascript">
        function barChartOptions() {
            return {
                legend: false,
                maintainAspectRatio: true,
                responsive: true,
                barPercentage: 0.5,
                categoryPercentage: 0.9,
                scales: {
                    xAxes: [{
                        gridLines: {
                            display: false
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                        },
                        gridLines: {
                            display: true,
                            color: '{{ kimai_context.chart.grid_color }}',
                            lineWidth: 1
                        }
                    }]
                },
                tooltips: {
                    callbacks: {
                        label: function(tooltipItem, data) {
                            return ' ' + data.datasets[tooltipItem.datasetIndex].tooltipData[tooltipItem.index];
                        },
                        afterTitle: function(tooltipItems, data) {
                            return ' ';
                        },
                    }
                }
            };
        }
    </script>
{% endmacro %}

{#
    labels      = ['Foo', 'Bar']
    datasets    = [{'value': 1234, 'tooltip': '1234€', 'color': ''}]
    options     = {'height: '100px', 'renderEvent': 'kimai.initialized'}
#}
{% macro bar_chart(id, labels, datasets, options) %}
    {% set height = options.height|default(kimai_context.chart.height ~ 'px') %}
    <div class="chart" style="position: relative; height: {{ height }};">
        <canvas id="{{ id }}" height="{{ height }}" style="height: {{ height }};"></canvas>
    </div>
    <script type="text/javascript">
        document.addEventListener('{{ options.renderEvent|default('kimai.initialized') }}', function() {
            new Chart(
                document.getElementById('{{ id }}').getContext("2d"), {
                    type: '{{ options.type|default('bar') }}',
                    data: {
                        labels: [
                            {% for label in labels %}
                            '{{ label }}',
                            {% endfor %}
                        ],
                        datasets: [
                            {% for dataset in datasets %}
                            {
                                backgroundColor: [
                                    {% for entry in dataset %}
                                    '{{ entry.color|default(kimai_context.chart.background_color) }}',
                                    {% endfor %}
                                ],
                                data: [
                                    {% for entry in dataset %}
                                    {{ entry.value }},
                                    {% endfor %}
                                ],
                                tooltipData: [
                                    {% for entry in dataset %}
                                    '{{ entry.tooltip }}',
                                    {% endfor %}
                                ],
                            },
                            {% endfor %}
                        ]
                    },
                    options: Object.assign(barChartOptions(),{{ options|json_encode|raw }})
                }
            );
        });
    </script>
{% endmacro %}
