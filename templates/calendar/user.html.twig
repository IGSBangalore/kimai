{% extends 'base.html.twig' %}
{% import "macros/widgets.html.twig" as widgets %}
{% import "macros/actions.html.twig" as actions %}

{% block page_title %}{{ 'calendar.title'|trans }}{% endblock %}
{% block page_subtitle %}{{ 'calendar.subtitle'|trans }}{% endblock %}
{% block page_actions %}{{ actions.calendar('index') }}{% endblock %}

{% block main %}
    {% embed '@AdminLTE/Widgets/box-widget.html.twig' %}
        {% block box_body_class %}no-padding{% endblock %}
        {% block box_body %}
            <div id="timesheet_calendar"></div>
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('kimai.timesheetUpdate', function() {
            $('#timesheet_calendar').fullCalendar('refetchEvents');
        });

        var changeHandler = function(event, delta, revertFunc) {
            var updateUrl = '{{ path('patch_timesheet', {id: '-XX-'}) }}'.replace('-XX-', event.id);
            var API = kimai.getPlugin('api');
            var ALERT = kimai.getPlugin('alert');

            var payload = {'begin': event.start.format()};

            if (event.end !== null && event.end !== undefined) {
                payload.end = event.end.format();
            } else {
                payload.end = null;

            }

            API.patch(updateUrl, JSON.stringify(payload), function(result) {
                ALERT.success('action.update.success');
            }, function(xhr, err) {
                if (xhr.responseJSON && xhr.responseJSON.message) {
                    err = xhr.responseJSON.message;
                }
                ALERT.error('action.update.error', err);
                revertFunc();
            });
        };

        document.addEventListener('kimai.initialized', function() {
            $('#timesheet_calendar').fullCalendar({
                defaultView: '{{ app.user.getPreferenceValue('calendar.initial_view') }}',
                {% if not google.apiKey is null %}
                googleCalendarApiKey: '{{ google.apiKey }}',
                {% endif %}
                eventSources: [
                    {
                        url: '{{ path('calendar_entries') }}',
                        color: '#00a65a',
                        borderColor: '#00a65a',
                        name: 'kimaiUserTimeSource'
                    }
                    {% for source in google.sources %}
                    ,
                    {
                        googleCalendarId: '{{ source.uri }}',
                        name: '{{ source.id }}',
                        color: '{{ source.color }}',
                        borderColor: '{{ source.color }}'
                    }
                    {% endfor %}
                ],
                header    : {
                    left  : 'prev,next today',
                    center: 'title',
                    right : 'month,agendaWeek,agendaDay'
                },
                eventLimit: {{ config.dayLimit }},
                weekNumbers: {% if config.showWeekNumbers %}true{% else %}false{% endif %},
                allDaySlot: false,
                navLinks: true,
                locale: '{{ app.request.locale }}',
                /*
                height: function() {
                    return 'parent';
                },
                */
                //aspectRatio: 2,
                height: 'auto',
                nowIndicator: true,
                now: '{{ now|date_format('c') }}',
                timezone: '{{ app.user.preferenceValue("timezone") }}',
                weekends: {% if config.showWeekends %}true{% else %}false{% endif %},
                businessHours: {
                    dow: [{{ config.businessDays|join(',') }}],
                    start: '{{ config.businessTimeBegin }}',
                    end: '{{ config.businessTimeEnd }}'
                },
                eventRender: function(eventObj, $el) {
                    // dont show popover for google calendar
                    if (eventObj.source.ajaxSettings.name !== 'kimaiUserTimeSource') {
                        return;
                    }
                    // or when an event is dragged or resized
                    if(window.hidePopover) {
                        return;
                    }
                    $el.popover({
                        title: eventObj.start.format('L') + ' | ' + eventObj.start.format('LT') + ' - ' + (eventObj.end ? eventObj.end.format('LT') : ''),
                        content:
                        '<div class="calendar-entry">' +
                            '<ul>' +
                                '<li>' + '{{ 'label.customer'|trans }}: ' + eventObj.customer + '</li>' +
                                '<li>' + '{{ 'label.project'|trans }}: ' + eventObj.project + '</li>' +
                                '<li>' + '{{ 'label.activity'|trans }}: ' + eventObj.activity + '</li>' +
                            '</ul>' +
                            (eventObj.description || eventObj.tags ? '<hr>' : '') +
                            (eventObj.description ? '<p>' + eventObj.description + '</p>' : '') +
                            (eventObj.tags !== null && eventObj.tags.length > 0 ? '<span class="badge bg-green">' + eventObj.tags.split(', ').join('</span> <span class="badge bg-green">') + '</span>' : '') +
                        '</div>'
                        ,
                        trigger: 'hover',
                        placement: 'auto',
                        container: 'body',
                        html: true
                    });
                },
                {% if is_granted('create_own_timesheet') %}
                // day-clicks are always triggered, unless a selection was created
                // so clicking in a day (month view) or any slot (week and day view) will trigger a dayClick
                // BEFORE triggering a select - make sure not two create dialogs are requested
                dayClick: function(date, jsEvent, view) {
                    if(view.type !== 'month') {
                        return;
                    }
                    var param = 'begin';
                    var begin = date.format();

                    var createUrl = '{{ path('timesheet_create') }}' + '?' + param + '=' + begin;
                    kimai.getPlugin('modal').openUrlInModal(createUrl);
                },
                selectable: true,
                select: function(start, end, jsEvent, view) {
                    if(view.type === 'month') {
                        // multi-day clicks are NOT allowed in the month view, as simple day clicks would also trigger
                        // a select - there is no way to distinguish a simple click and a two day selection
                        return;
                    }
                    var createUrl = '{{ path('timesheet_create') }}' + '?from=' + start.format() + '&to=' + end.format();
                    kimai.getPlugin('modal').openUrlInModal(createUrl);
                },
                {% endif %}
                {% if is_granted('edit_own_timesheet') %}
                eventClick: function(calEvent, jsEvent, view) {
                    if (calEvent.source.ajaxSettings.name !== 'kimaiUserTimeSource') {
                        jsEvent.preventDefault();
                        return;
                    }
                    var editUrl = '{{ path('timesheet_edit', {id: '-XX-'}) }}'.replace('-XX-', calEvent.id);
                    kimai.getPlugin('modal').openUrlInModal(editUrl);
                },
                editable: true,
                eventDragStart: function(event, jsEvent, ui, view) {
                    window.hidePopover = true;
                },
                eventDragStop: function( event, jsEvent, ui, view ) {
                    window.hidePopover = false;
                },
                eventDrop: changeHandler,
                eventResizeStart: function(event, jsEvent, ui, view) {
                    window.hidePopover = true;
                },
                eventResizeStop: function( event, jsEvent, ui, view ) {
                    window.hidePopover = false;
                },
                eventResize: changeHandler,
                {% endif %}
                /*
                slotDuration: '00:30:00',                               // TODO make me configurable
                */
                minTime: '{{ config.timeframeBegin }}',
                maxTime: '{{ config.timeframeEnd }}',
                defaultTimedEventDuration: '00:30'
            })
        });
    </script>
{% endblock %}